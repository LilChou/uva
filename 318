#include <stdio.h>
#include <string.h>
#define max 2147483647
int map[501][501], dis[501], visit[501], min;
int main()
{
	int n, m, cases=1, i, j, a, b, l, r, t;
	float end;
	while(~scanf("%d%d", &n, &m) && n)
	{
		memset(map, 0, sizeof(map));
		memset(dis, -1, sizeof(dis));
		memset(visit, 0, sizeof(visit));
		i=0;
		while(i<m)
		{
			scanf("%d%d%d", &a, &b, &l);
			map[a][b]=map[b][a]=l;
			i++;
		}
		for(i=0; i<=n; i++)	dis[i]=max;
		dis[1]=0;
		while(1)
		{
			a=-1, min=max;
			for(i=1; i<=n; i++)
			{
				if (!visit[i] && dis[i] < min) 
				{	min = dis[i], a = i;	}
			}
			if(a==-1)	break;
			visit[a]=1;
			for(i=1; i<=n; i++)
			{
				if(map[a][i]!=0)
					if(dis[i] > dis[a]+map[a][i])	dis[i] = dis[a]+map[a][i];
			}
		}
		printf("System #%d\n", cases++);
		l=1, r=-1;
		double ans=0;
		for(i=1; i<=n; i++)
			if(dis[i]!=max && dis[i]>ans)
			{
				ans=dis[i], l=i;
			}
		for(i=1; i<=n; i++)
		{
			for(j=1; j<=n; j++)
			{
				if(map[i][j]!=0)
				{
					a=dis[i], b=dis[j];
					if(a<b)
					{
						t=a;
						a=b;
						b=t;
					}
				}
				end=a + (map[i][j]-(a-b))/2.0;
				if(a!=max && b!=max && end>ans)
				{
					l = i < j ? i : j;
			        r = i > j ? i : j;
			        ans = end;
				}
			}
		}
		if (r == -1)	printf("The last domino falls after %.1lf seconds, at key domino %d.\n\n", ans, l);
	    else	printf("The last domino falls after %.1lf seconds, between key dominoes %d and %d.\n\n", ans, l, r);
	}
	return 0;
}
