#include <stdio.h>
#include <string.h>
int n, graph[105][105], temp[105][105], visit[105];
void check(int i, int p)
{
	int j;
	if(p==i && i==n)	return ;
	if(p==i && i==1)	return check(i, 2);
	if(p==i)	return ;
	for(j=1; j<=n; j++)
	{
		if(temp[p][j] && !visit[j])
		{
			visit[j]=1;
			check(i, j);
		}
	}
}
int main()
{
	int ans, t, x, i, j;
	char c, ct[400];
	while(~scanf("%d", &n) && n)
	{
		memset(graph, 0, sizeof(graph));
		ans=0;
		while(~scanf("%d", &t) && t)
		{
			i=0, x=0;
			c=getchar();
			if(c=='\n')	continue;
			scanf("%[^\n]", ct);
			j=strlen(ct);
			while(j--)
			{
				if(ct[i]==' ')
				{
					graph[t][x]=graph[x][t]=1;
					x=0;
				}
				else
					x=10*x + (int)ct[i]-(int)'0';
				i++;
			}
			graph[t][x]=graph[x][t]=1;
		}
		for(i=1; i<=n; i++)
		{
			memset(temp, 0, sizeof(temp));
			for(t=1; t<=n; t++)
				for(x=1; x<=n; x++)
					temp[t][x]=graph[t][x];
			for(t=1; t<=n; t++)
				temp[i][t]=temp[t][i]=0;
			memset(visit, 0, sizeof(visit));
			check(i, 1);
			x=0;
			for(t=1; t<=n; t++)
				if(!visit[t])
					if(t!=i)
					{
						x=1;
						break;
					}
			if(x)	ans++;
		}
		if(n==2)	ans=0;
		printf("%d\n", ans);
	}
	return 0;
}
