#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int street[2000][3], junction[50][2000], jnum[50], n, m, stack[2000], sp;
void walk(int x)
{
	int i, t;
	for(i=0; i<jnum[x]; i++)
	{
		if(street[junction[x][i]][0])
		{
			if(street[junction[x][i]][1] == x)	t=street[junction[x][i]][2];
			else	t=street[junction[x][i]][1];

			street[junction[x][i]][0]=0;
			walk(t);
			stack[sp++]=junction[x][i];
		}
	}
}
int cmp(const void* a, const void* b)
{	return *(int*)a - *(int*)b;}
void init()
{
	n=m=sp=0;
	memset(street, 0, sizeof(street));
	memset(junction, 0, sizeof(junction));
	memset(jnum, 0, sizeof(jnum));
	memset(stack, 0, sizeof(stack));
}
int main(void)
{
	int x, y, z, i, j, end, start;
	while(~scanf("%d%d", &x, &y) && x)
	{
		if(x<y)	start=x;
		else start=y;
		scanf("%d", &z);
		init();
		n++, end=0;
		street[z][1]=x, street[z][2]=y, street[z][0]=1;
		junction[x][jnum[x]++]=junction[y][jnum[y]++]=z;
		while(~scanf("%d%d", &x, &y) && x)
		{
			scanf("%d", &z);
			street[z][1]=x, street[z][2]=y, street[z][0]=1;
			junction[x][jnum[x]++]=junction[y][jnum[y]++]=z;
			n++;
			if(x>m)	m=x;
			if(y>m) m=y;
		}
		for(i=1; i<=m; i++)
			if(jnum[i]%2!=0)
			{
				end=1;
				break;
			}
		if(end)	printf("Round trip does not exist.\n\n");
		else
		{
			for(i=1; i<=m; i++)	qsort(junction[i], jnum[i], sizeof(int), cmp);
			walk(start);
			for(i=sp-1; i>0; i--) printf("%d ", stack[i]);
			printf("%d\n\n", stack[0]);
		}
	}
	return 0;
}
