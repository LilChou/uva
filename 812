#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int w, b, cases=0, choose[55][25], bucket[11000];
void dfs(int workyards, int pile)
{
	int k;
	if(workyards == w-1)
	{
		for(k=1; k<=choose[w-1][0]; k++)
			bucket[pile + choose[w-1][k]]++;
	}
	else
	{
		for(k=1; k<=choose[workyards][0]; k++)
			dfs(workyards+1, pile+choose[workyards][k]);
	}
}
int main(void)
{
    int i, j;
	while(scanf("%d", &w)!=EOF && w)
	{
		int total_profit=0;
		for(i=0; i < w; ++i)
		{
			int profit=0, max=0, n=0;
			choose[i][0] = 1; /* how many kinds we can take*/
			choose[i][1] = 0; /* choose 0 prul*/

			scanf("%d", &b);
			for(j = 0; j < b; ++j)
			{
				scanf("%d", &n);
				profit += (10-n);
				if(profit > max)
				{
					max = profit;
					choose[i][0] = 1;
					choose[i][1] = j+1;
				}
				else if(profit == max)
					choose[i][++choose[i][0]] = j+1;
			}
			total_profit += max;
		}

		if(cases)	printf("\n");
		printf("Workyards %d\nMaximum profit is %d.\nNumber of pruls to buy:", ++cases, total_profit);
		memset(bucket, 0, sizeof(bucket));
		dfs(0, 0);
		j=0;
		for(i=0; i<11000; i++)
		{
			if(bucket[i]>0)
			{
				printf(" %d", i);
				j++;
			}
			if(j==10)	break;
		}
		printf("\n");
	}
	return 0;
}
