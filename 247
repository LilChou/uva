#include <stdio.h>
#include <string.h>
char num2name[110][30];
int n, m, map[110][110], exist[110][110], num, t, ans[110][110];
int stack[110], s, low[110], dfn[110], visit[110];
int find_num(char *cha)
{
	int i=0, j;
	while(i<num)
	{
		if(!strcmp(num2name[i], cha))	return i;
		i++;
	}
	strcpy(num2name[num++], cha);
	return num-1;
}
void dfs(int cur)
{
	int i, j, x;
	low[cur]=dfn[cur]=t;
	t++;
	stack[s++]=cur;
	for(i=0; i<map[cur][109]; i++)
	{
		x=map[cur][i];
		if(dfn[x]==0)
		{
			dfs(x);
			if(low[cur]>low[x])	low[cur]=low[x];
		}
		else if(visit[x]==0)
			if(dfn[x]<low[cur])	low[cur]=dfn[x];
	}
	if(low[cur]==dfn[cur])
	{
		while(1)
		{
			j=stack[--s];
			visit[j]=1;
			ans[num][++ans[num][0]]=j;
			if(j==cur)
			{
				num++;
				break;
			}
		}
	}
}
int main()
{
	int i, j, x, y;
	char cha[30];
	int cases=1;
	while(~scanf("%d%d", &n, &m) && n)
	{
		memset(map, 0, sizeof(map));
		memset(low, 0, sizeof(low));
		memset(dfn, 0, sizeof(dfn));
		memset(ans, 0, sizeof(ans));
		memset(exist, 0, sizeof(exist));
		memset(visit, 0, sizeof(visit));
		memset(stack, 0, sizeof(stack));
		memset(num2name, -1, sizeof(num2name));
		num=0, t=1, s=0;
		for(i=0; i<m; i++)
		{
			scanf("%s", cha);
			x=find_num(cha);
			scanf("%s", cha);
			y=find_num(cha);
			if(!exist[x][y])
			{
				map[x][map[x][109]++]=y;
				exist[x][y]=1;
			}
		}
		if(cases!=1)	printf("\n");
		printf("Calling circles for data set %d:\n", cases++);
		num=0;
		for(i=0; i<n; i++)
		{
			if(visit[i]==0)	dfs(i);
		}
		for(i=num-1; i>=0; i--)
		{
			printf("%s", num2name[ans[i][ans[i][0]]]);
			for(j=ans[i][0]-1; j>0; j--)	printf(", %s", num2name[ans[i][j]]);
			printf("\n");
		}
	}
	return 0;
}
